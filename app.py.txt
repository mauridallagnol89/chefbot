from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import google.generativeai as genai
from prompt import chefbot_prompt
import os

app = Flask(__name__)

# Configurar chave da API Gemini
genai.configure(api_key=os.environ.get("GOOGLE_API_KEY"))

# Armazenar histórico por usuário
conversations = {}

@app.route("/whatsapp", methods=["POST"])
def whatsapp():
    incoming_msg = request.form.get('Body')
    user_number = request.form.get('From')

    # Se não houver histórico, criar um novo
    if user_number not in conversations:
        conversations[user_number] = [chefbot_prompt]

    # Adicionar a nova mensagem ao histórico
    conversations[user_number].append(f"Usuário: {incoming_msg}")

    # Criar modelo
    model = genai.GenerativeModel("gemini-pro")

    # Gerar resposta com o histórico
    chat = model.start_chat(history=[])
    for msg in conversations[user_number]:
        chat.send_message(msg)

    response = chat.last.text

    # Adicionar resposta ao histórico
    conversations[user_number].append(f"ChefBot: {response}")

    # Responder pelo Twilio
    twilio_response = MessagingResponse()
    twilio_response.message(response)
    return str(twilio_response)

if __name__ == "__main__":
    app.run(debug=True)
